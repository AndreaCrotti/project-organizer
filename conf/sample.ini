# some possible options we might want to have
# an url in in the form
# <type> <url> [profile]
# where the profile might give some more information about how to do things
# for example it might know that bitbucket does things in a way different than github

# TODO
# - see how to handle possible interconnected links between different projects
# - add some ways to declare more possible branches
# - the name of the protocol is not necessary unless it's HTTP
# - create some possible categories and common tags for the different projects
# - create a priority system to track the importance of each
#
# see how to declare dependencies
#
# - add a linking mechanisms to bug and bug reports, and store in some
#   sort of databases the list of contributions made (bug
#   reports/patches sent etc etc)
#
# In theory the method to download things from the various CMS can be
# also be switched at run-time.
#
# To resolve automatically the actual path of files that are added
#

[default]
checkout = True
backup = True
private = False # can be shared or not
# script to run after a clone is done
post_clone_hook =
# script to run after a succesful update
post_update_hook =
# don't overwrite by default if something is already found
overwrite = False
# where to really place the project (and create a symlink here)
#TODO: make os-independent symlinks if possible
path = .

# bug_report = None

# link to the bug reporting mechanism this might also have a profile
# declared (trac/redmine...) so that we can modularise and automate
# the communication between elements

# declere under which conditions to download each of the different things
[profiles]
personal = all

[gprof2dot]
url = git https://code.google.com/p/jrfonseca.gprof2dot/

[nose]
url = git git://github.com/nose-devs/nose.git

[ipython]
url = git https://github.com/ipython/ipython

[pynocle]
url = hg https://code.google.com/p/pynocle/

[pyflakes]
url = git git://github.com/kevinw/pyflakes.git

[pydbgr]
url = svn http://pydbgr.googlecode.com/svn/trunk/

[pep8]
url = git git://github.com/kevinw/pyflakes.git

[pudb]
url = git http://git.tiker.net/trees/pudb.git

[pydev]
url = git git://github.com/aptana/Pydev.git

[fishmonger]
url = hg https://bitbucket.org/ned/fishmonger

[pfilesystem]
url = svn http://pyfilesystem.googlecode.com/svn/trunk/

[pythonscope]
url = bzr lp:pythoscope

[sourcecodegen]
url = bzr lp:sourcecodegen

[profilehooks]
url = svn http://mg.pov.lt/profilehooks/svn

[celery]
url = git git://github.com/ask/celery.git

[monocle]
url = git git://github.com/saucelabs/monocle.git

[snakefood]
url = hg https://hg.furius.ca/public/snakefood/

[pyzmq]
url = git git://github.com/zeromq/pyzmq.git

[libzmq]
url = git git://github.com/zeromq/libzmq.git

[conkeror]
url = git git://repo.or.cz/conkeror.git

[rope]
url = hg https://bitbucket.org/agr/rope

[ropemacs]
url = hg https://bitbucket.org/agr/ropemacs

[buildbot]
url = git git://github.com/buildbot/buildbot.git

[bitlbee]
url = bzr http://code.bitlbee.org/bitlbee/

[scala]
url = svn http://lampsvn.epfl.ch/svn-repos/scala/scala/trunk

[redmine]
url = svn http://redmine.rubyforge.org/svn/branches/1.2-stable

[mailman]
url = bzr lp:mailman

[scapy]
url = hg http://hg.secdev.org/scapy

[scripts]
url = git github:AndreaCrotti/scripts.git

[bash_conf]
# if the url is only on my hard disk it means is a private repository??
url = git $HOME/Dropbox/bash_conf.git

[tox]
url = hg https://bitbucket.org/hpk42/tox

[razz]
url = git github:AndreaCrotti/razz.git

[walkdir]
url = hg https://bitbucket.org/ncoghlan/walkdir

[shell_command]
url = hg https://bitbucket.org/ncoghlan/shell_command

[code-kata]
url = git github:AndreaCrotti/code-kata.git

[logic]
url = git github:AndreaCrotti/logic-truth-tables.git

[linux-kernel]
url = git git://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux-2.6.git

[pygit]
url = git git://gitorious.org/pygit/mainline.git

[openpyxl]
url = hg https://bitbucket.org/ericgazoni/openpyxl

[cmake]
url = git git://cmake.org/cmake.git

[psutils]
url = svn http://psutil.googlecode.com/svn/trunk/

[pycallgraph]
# if set the project is a fork from another project
original =
url = git github:AndreaCrotti/pycallgraph.git
auto_checkout = False

[ledger]
#TODO: the github.com -> github translation might appear later maybe
url = git github:AndreaCrotti/ledger.git

[python-3-pattern-idioms]
url = hg https://andrea_crotti@bitbucket.org/BruceEckel/python-3-patterns-idioms

# [photos]
# url = plain ~/Pictures

[objgraph]
url = bzr lp:objgraph

[coverage]
url = hg https://andrea_crotti@bitbucket.org/andrea_crotti/coverage.py
#TODO: find a way to get the original project automatically
original = hg https://andrea_crotti@bitbucket.org/ned/coveragepy

[python]
# this is the development version, checkout also some other versions
# automatically, probably better in different directories
url = hg http://hg.python.org/cpython

[hgapi]
url = hg https://bitbucket.org/haard/hgapi

# these two are necessary to develop with the py2git
[py2git]
url = git git://github.com/libgit2/pygit2.git

[libgit2]
url = git git://github.com/libgit2/libgit2.git

[pygments]
url = hg https://bitbucket.org/birkenfeld/pygments-main

# [emacs-conf]
# # ---------- emacs mode ----------
# # this is more complicated because there are many sub-modules the git
# # submodules can stay as they are, but all the other modules should be
# # declared as submodules
# path = my-emacs-conf

# # I can in theory set up
# [[scala-mode]]
# url = svn http://lampsvn.epfl.ch/svn-repos/scala/scala-tool-support/trunk/src/emacs/

# [[cedet]]
# url = bzr bzr://cedet.bzr.sourceforge.net/bzrroot/cedet/code/trunk

# [[emacs-eclim]]
# url = git git://github.com/senny/emacs-eclim.git

# [[ensime]]
# url = git git://github.com/aemoncannon/ensime.git

# [[python-mode]]
# url = bzr lp:python-mode

# # ---------- end of emacs mode ----------
